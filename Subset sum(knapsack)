#User function Template for python3

class Solution:
    def isSubsetSum (self, N, arr, sum):
        # code here 
        
        #Recursion mainlogic
        # if(N==0):
        #     return False
        # elif(sum==0):
        #     return True
        # elif(arr[N-1]<=sum):
        #     return isSubsetSum(N-1,arr,sum-arr[N-1]) or isSubsetSum(N-1,arr,sum)
        # else:
        #     return isSubsetSum(N-1,arr,sum)
        
        
        # dp=[[0 for j in range(sum+1)]for i in range(N+1)]
        for i in range(N+1):
            for j in range(sum+1):
                if(i==0):
                    dp[i][j]=0
                if(j==0):
                    dp[i][j]=1
                elif arr[i-1]<=j:
                    dp[i][j]=dp[i-1][j-arr[i-1]] or dp[i-1][j]
                else:
                    dp[i][j]=dp[i-1][j]
                    
        if(dp[N][sum]==1):
            return True
        else:
            return False
        
        


#{ 
 # Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__': 
    t = int (input ())
    for _ in range (t):
        N = int(input())
        arr = input().split()
        for itr in range(N):
            arr[itr] = int(arr[itr])
        sum = int(input())

        ob = Solution()
        if ob.isSubsetSum(N,arr,sum)==True:
            print(1)
        else :
            print(0)
            
        

# } Driver Code Ends
